/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useLayoutEffect, useEffect, useRef, useState } from "react";
import { useFrame } from "@react-three/fiber";
import { useGLTF } from "@react-three/drei";
import { useSpring, animated } from "@react-spring/web";

export default function Torno(props) {
  const { nodes, materials } = useGLTF("../models/torno.glb");

  const tornoTornoRef = useRef();
  //   let TornoRotation = { r: 0 };

  // useEffect(() => {
  //   // tornoTornoRef.current.rotation.z = 2.36;
  // }, []);

  //   const [tornoRotation, setTornoRotation] = useState(0);
  //   console.log(tornoRotation);

  //   useFrame((state, delta) => {
  //     tornoTornoRef.current.rotateY(delta);
  //   });

  return (
    <group {...props} dispose={null}>
      <group
        ref={tornoTornoRef}
        position={[-0.258, 1.476, 0]}
        rotation-z={2.36}
      >
        <mesh castShadow receiveShadow geometry={nodes.Cylinder009.geometry}>
          <meshStandardMaterial color="white" />
        </mesh>

        <mesh castShadow receiveShadow geometry={nodes.Cylinder009_1.geometry}>
          <meshStandardMaterial color="white" />
        </mesh>

        <mesh castShadow receiveShadow geometry={nodes.Cylinder009_2.geometry}>
          <meshStandardMaterial color="white" />
        </mesh>
      </group>

      <mesh
        castShadow
        receiveShadow
        geometry={nodes.cuerpo.geometry}
        position={[0, 1, 0]}
      >
        <meshStandardMaterial color="white" />
      </mesh>

      <mesh
        castShadow
        receiveShadow
        geometry={nodes.flecha.geometry}
        position={[-0.491, 1.256, 1.001]}
        rotation={[Math.PI / 2, 0, 0]}
      >
        <meshStandardMaterial color="red" />
      </mesh>
    </group>
  );
}

useGLTF.preload("../models/torno.glb");
